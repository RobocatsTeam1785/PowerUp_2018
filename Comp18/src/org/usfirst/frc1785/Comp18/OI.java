// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1785.Comp18;


import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

import org.usfirst.frc1785.Comp18.subsystems.*;
import edu.wpi.first.wpilibj.XboxController;

import org.usfirst.frc1785.Comp18.commands.ArmU;
import org.usfirst.frc1785.Comp18.commands.ArmD;
import org.usfirst.frc1785.Comp18.commands.WristU;
import org.usfirst.frc1785.Comp18.commands.WristD;
import org.usfirst.frc1785.Comp18.commands.ClawU;
import org.usfirst.frc1785.Comp18.commands.ClawD;
import org.usfirst.frc1785.Comp18.commands.HighGear;
import org.usfirst.frc1785.Comp18.commands.LowGear;
//import org.usfirst.frc1785.Comp18.commands.Shifter;
import org.usfirst.frc1785.Comp18.commands.DriveTainC;
import org.usfirst.frc1785.Comp18.commands.AutonomousCommand;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Button abutton;
    public Button bbutton;
    public Button xbutton;
    public Button ybutton;
    public Button lBbutton;
    public Button rBbutton;
    public Button backbutton;
    public Button startbutton;
    public Button laxisbutton;
    public Button raxisbutton;
    public XboxController xbox;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xbox = new XboxController(0);
        
        raxisbutton = new JoystickButton(xbox, 10);
        
        
        laxisbutton = new JoystickButton(xbox, 9);
        
        
        startbutton = new JoystickButton(xbox, 8);
        startbutton.whenPressed(new ArmD());
        
        backbutton = new JoystickButton(xbox, 7);
        backbutton.whenPressed(new ClawD());
        
        rBbutton = new JoystickButton(xbox, 6);
        rBbutton.whenPressed(new ArmU());
        
        lBbutton = new JoystickButton(xbox, 5);
        lBbutton.whenPressed(new WristD());
        
        ybutton = new JoystickButton(xbox, 4);
        ybutton.whenPressed(new WristU());
        
        
        xbutton = new JoystickButton(xbox, 3);
        xbutton.whenPressed(new LowGear());
        
        bbutton = new JoystickButton(xbox, 2);
        bbutton.whileHeld(new ClawU());
        
        abutton = new JoystickButton(xbox, 1);
        abutton.whenPressed(new HighGear());
        //abutton.toggleWhenPressed(new Shifter());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("ClawU", new ClawU());
        SmartDashboard.putData("ClawD", new ClawD());
        SmartDashboard.putData("WristU", new WristU());
        SmartDashboard.putData("WristD", new WristD());
        SmartDashboard.putData("ArmU", new ArmU());
        SmartDashboard.putData("ArmD", new ArmD());
        SmartDashboard.putData("DriveTainC", new DriveTainC());
        SmartDashboard.putData("HighGear", new HighGear());
        SmartDashboard.putData("LowGear", new LowGear());
        //SmartDashboard.putData("Shifter", new Shifter());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public XboxController getxbox() {
        return xbox;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

